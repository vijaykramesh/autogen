"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7945],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=o(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6979:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var a=n(3117),r=(n(7294),n(3905));const l={sidebar_label:"redis_cache",title:"cache.redis_cache"},i=void 0,c={unversionedId:"reference/cache/redis_cache",id:"reference/cache/redis_cache",isDocsHomePage:!1,title:"cache.redis_cache",description:"RedisCache Objects",source:"@site/docs/reference/cache/redis_cache.md",sourceDirName:"reference/cache",slug:"/reference/cache/redis_cache",permalink:"/autogen/docs/reference/cache/redis_cache",editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/cache/redis_cache.md",tags:[],version:"current",frontMatter:{sidebar_label:"redis_cache",title:"cache.redis_cache"},sidebar:"referenceSideBar",previous:{title:"disk_cache",permalink:"/autogen/docs/reference/cache/disk_cache"},next:{title:"client",permalink:"/autogen/docs/reference/oai/client"}},s=[{value:"RedisCache Objects",id:"rediscache-objects",children:[{value:"__init__",id:"__init__",children:[],level:4},{value:"get",id:"get",children:[],level:4},{value:"set",id:"set",children:[],level:4},{value:"close",id:"close",children:[],level:4},{value:"__enter__",id:"__enter__",children:[],level:4},{value:"__exit__",id:"__exit__",children:[],level:4}],level:2}],o={toc:s};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},o,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"rediscache-objects"},"RedisCache Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class RedisCache(AbstractCache)\n")),(0,r.kt)("p",null,"Implementation of AbstractCache using the Redis database."),(0,r.kt)("p",null,"This class provides a concrete implementation of the AbstractCache\ninterface using the Redis database for caching data."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"seed")," ",(0,r.kt)("em",{parentName:"li"},"str")," - A seed or namespace used as a prefix for cache keys."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cache")," ",(0,r.kt)("em",{parentName:"li"},"redis.Redis")," - The Redis client used for caching.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods"),":"),(0,r.kt)("p",null,"  ",(0,r.kt)("strong",{parentName:"p"},"init"),"(self, seed, redis_url): Initializes the RedisCache with the given seed and Redis URL.\n_prefixed_key(self, key): Internal method to get a namespaced cache key.\nget(self, key, default=None): Retrieves an item from the cache.\nset(self, key, value): Sets an item in the cache."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"close(self)")," - Closes the Redis client."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"__enter__(self)")," - Context management entry.\n",(0,r.kt)("strong",{parentName:"li"},"exit"),"(self, exc_type, exc_value, traceback): Context management exit.")),(0,r.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(seed, redis_url)\n")),(0,r.kt)("p",null,"Initialize the RedisCache instance."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"seed")," ",(0,r.kt)("em",{parentName:"li"},"str")," - A seed or namespace for the cache. This is used as a prefix for all cache keys."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"redis_url")," ",(0,r.kt)("em",{parentName:"li"},"str")," - The URL for the Redis server.")),(0,r.kt)("h4",{id:"get"},"get"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get(key, default=None)\n")),(0,r.kt)("p",null,"Retrieve an item from the Redis cache."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key")," ",(0,r.kt)("em",{parentName:"li"},"str")," - The key identifying the item in the cache."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"default")," ",(0,r.kt)("em",{parentName:"li"},"optional")," - The default value to return if the key is not found.\nDefaults to None.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  The deserialized value associated with the key if found, else the default value."),(0,r.kt)("h4",{id:"set"},"set"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def set(key, value)\n")),(0,r.kt)("p",null,"Set an item in the Redis cache."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key")," ",(0,r.kt)("em",{parentName:"li"},"str")," - The key under which the item is to be stored."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," - The value to be stored in the cache.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notes"),":"),(0,r.kt)("p",null,"  The value is serialized using pickle before being stored in Redis."),(0,r.kt)("h4",{id:"close"},"close"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def close()\n")),(0,r.kt)("p",null,"Close the Redis client."),(0,r.kt)("p",null,"Perform any necessary cleanup, such as closing network connections."),(0,r.kt)("h4",{id:"__enter__"},"_","_","enter","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __enter__()\n")),(0,r.kt)("p",null,"Enter the runtime context related to the object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"self")," - The instance itself.")),(0,r.kt)("h4",{id:"__exit__"},"_","_","exit","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __exit__(exc_type, exc_value, traceback)\n")),(0,r.kt)("p",null,"Exit the runtime context related to the object."),(0,r.kt)("p",null,"Perform cleanup actions such as closing the Redis client."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exc_type")," - The exception type if an exception was raised in the context."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exc_value")," - The exception value if an exception was raised in the context."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"traceback")," - The traceback if an exception was raised in the context.")))}p.isMDXComponent=!0}}]);