"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[726],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),h=s(n),k=r,d=h["".concat(o,".").concat(k)]||h[k]||u[k]||l;return n?a.createElement(d,c(c({ref:t},p),{},{components:n})):a.createElement(d,c({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,c=new Array(l);c[0]=h;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<l;s++)c[s]=n[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1855:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var a=n(3117),r=(n(7294),n(3905));const l={sidebar_label:"disk_cache",title:"cache.disk_cache"},c=void 0,i={unversionedId:"reference/cache/disk_cache",id:"reference/cache/disk_cache",isDocsHomePage:!1,title:"cache.disk_cache",description:"DiskCache Objects",source:"@site/docs/reference/cache/disk_cache.md",sourceDirName:"reference/cache",slug:"/reference/cache/disk_cache",permalink:"/autogen/docs/reference/cache/disk_cache",editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/cache/disk_cache.md",tags:[],version:"current",frontMatter:{sidebar_label:"disk_cache",title:"cache.disk_cache"},sidebar:"referenceSideBar",previous:{title:"cache_factory",permalink:"/autogen/docs/reference/cache/cache_factory"},next:{title:"redis_cache",permalink:"/autogen/docs/reference/cache/redis_cache"}},o=[{value:"DiskCache Objects",id:"diskcache-objects",children:[{value:"__init__",id:"__init__",children:[],level:4},{value:"get",id:"get",children:[],level:4},{value:"set",id:"set",children:[],level:4},{value:"close",id:"close",children:[],level:4},{value:"__enter__",id:"__enter__",children:[],level:4},{value:"__exit__",id:"__exit__",children:[],level:4}],level:2}],s={toc:o};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"diskcache-objects"},"DiskCache Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class DiskCache(AbstractCache)\n")),(0,r.kt)("p",null,"Implementation of AbstractCache using the DiskCache library."),(0,r.kt)("p",null,"This class provides a concrete implementation of the AbstractCache\ninterface using the diskcache library for caching data on disk."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cache")," ",(0,r.kt)("em",{parentName:"li"},"diskcache.Cache")," - The DiskCache instance used for caching.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Methods"),":"),(0,r.kt)("p",null,"  ",(0,r.kt)("strong",{parentName:"p"},"init"),"(self, seed): Initializes the DiskCache with the given seed.\nget(self, key, default=None): Retrieves an item from the cache.\nset(self, key, value): Sets an item in the cache."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"close(self)")," - Closes the cache."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"__enter__(self)")," - Context management entry.\n",(0,r.kt)("strong",{parentName:"li"},"exit"),"(self, exc_type, exc_value, traceback): Context management exit.")),(0,r.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(seed)\n")),(0,r.kt)("p",null,"Initialize the DiskCache instance."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"seed")," ",(0,r.kt)("em",{parentName:"li"},"str")," - A seed or namespace for the cache. This is used to create\na unique storage location for the cache data.")),(0,r.kt)("h4",{id:"get"},"get"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def get(key, default=None)\n")),(0,r.kt)("p",null,"Retrieve an item from the cache."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key")," ",(0,r.kt)("em",{parentName:"li"},"str")," - The key identifying the item in the cache."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"default")," ",(0,r.kt)("em",{parentName:"li"},"optional")," - The default value to return if the key is not found.\nDefaults to None.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("p",null,"  The value associated with the key if found, else the default value."),(0,r.kt)("h4",{id:"set"},"set"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def set(key, value)\n")),(0,r.kt)("p",null,"Set an item in the cache."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"key")," ",(0,r.kt)("em",{parentName:"li"},"str")," - The key under which the item is to be stored."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value")," - The value to be stored in the cache.")),(0,r.kt)("h4",{id:"close"},"close"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def close()\n")),(0,r.kt)("p",null,"Close the cache."),(0,r.kt)("p",null,"Perform any necessary cleanup, such as closing file handles or\nreleasing resources."),(0,r.kt)("h4",{id:"__enter__"},"_","_","enter","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __enter__()\n")),(0,r.kt)("p",null,"Enter the runtime context related to the object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"self")," - The instance itself.")),(0,r.kt)("h4",{id:"__exit__"},"_","_","exit","_","_"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def __exit__(exc_type, exc_value, traceback)\n")),(0,r.kt)("p",null,"Exit the runtime context related to the object."),(0,r.kt)("p",null,"Perform cleanup actions such as closing the cache."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exc_type")," - The exception type if an exception was raised in the context."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"exc_value")," - The exception value if an exception was raised in the context."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"traceback")," - The traceback if an exception was raised in the context.")))}p.isMDXComponent=!0}}]);